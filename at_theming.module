<?php

use \Drupal\at_theming\EntityTemplate\Config as EntityTemplateConfig;
use \Drupal\at_base\Helper\RenderContent as ContentRender;
use Drupal\at_theming\Breadcrumb\BreadCrumbProcess;

/**
 * Implements hook_entity_view_alter()
 */
function at_theming_entity_view_alter(&$build, $entity_type) {
  if ($data = at_id(new EntityTemplateConfig($entity_type, $build['#bundle'], $build['#view_mode']))->get()) {
    $data['variables'] = isset($data['variables']) ? $data['variables'] : array();
    $data['variables'] += array('build' => $build);
    $build = array(
      '#entity_type' => $build['#entity_type'],
      '#bundle' => $build['#bundle'],
      '#view_mode' => $build['#view_mode'],
      '#language' => 'language',
      '#contextual_links ' => !empty($build['#contextual_links']) ? $build['#contextual_links'] : NULL,
      'at_theming' => at_id(new ContentRender($data))->render(),
      '#build' => $build,
    );
  }
}

/**
 * Implement hook_entity_view().
 * 
 * @param type $entity
 * @param type $type
 * @param type $view_mode
 * @param type $langcode
 */
function at_theming_entity_view($entity, $type, $view_mode, $langcode) {
  // Create breadcrumb form yml config
  at_id(new BreadCrumbProcess())->breadcrumb('entity', array('entity' => $entity, 'entity_type' => $type));
}

/**
 * Implement hook_preprocess_page().
 *
 * @param type $vars
 */
function at_theming_preprocess_page(&$vars) {
  // Create breadcrumb form yml config
  at_id(new BreadCrumbProcess())->breadcrumb('pages');
}

/**
 * Implement hook_preprocess_html().
 * 
 * @param array $variables
 */
function at_theming_preprocess_html(&$variables) {
  at_id(new \Drupal\at_theming\PageClassAlter\BodyTag($variables,current_path()));
}